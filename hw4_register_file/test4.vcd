$date
	Sun Oct 06 22:43:20 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module register_file_tb $end
$scope module idut $end
$var wire 1 ! clk $end
$var wire 16 " dst_data [15:0] $end
$var wire 4 # dst_reg [3:0] $end
$var wire 1 $ rst $end
$var wire 16 % src_data1 [15:0] $end
$var wire 16 & src_data2 [15:0] $end
$var wire 4 ' src_reg1 [3:0] $end
$var wire 4 ( src_reg2 [3:0] $end
$var wire 1 ) write_reg $end
$var wire 16 * N3 [15:0] $end
$var wire 16 + N2 [15:0] $end
$var wire 16 , N1 [15:0] $end
$scope module r0 $end
$var wire 16 - bitline1 [15:0] $end
$var wire 16 . bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 / d [15:0] $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 write_reg $end
$scope module b0 $end
$var wire 1 3 bitline1 $end
$var wire 1 4 bitline2 $end
$var wire 1 ! clk $end
$var wire 1 5 d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 6 q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 5 d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 6 q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 7 bitline1 $end
$var wire 1 8 bitline2 $end
$var wire 1 ! clk $end
$var wire 1 9 d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 : q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 9 d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 : q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 ; bitline1 $end
$var wire 1 < bitline2 $end
$var wire 1 ! clk $end
$var wire 1 = d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 > q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 = d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 > q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 ? bitline1 $end
$var wire 1 @ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 A d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 B q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 A d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 B q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 C bitline1 $end
$var wire 1 D bitline2 $end
$var wire 1 ! clk $end
$var wire 1 E d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 F q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 E d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 F q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 G bitline1 $end
$var wire 1 H bitline2 $end
$var wire 1 ! clk $end
$var wire 1 I d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 J q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 I d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 J q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 K bitline1 $end
$var wire 1 L bitline2 $end
$var wire 1 ! clk $end
$var wire 1 M d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 N q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 M d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 N q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 O bitline1 $end
$var wire 1 P bitline2 $end
$var wire 1 ! clk $end
$var wire 1 Q d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 R q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 Q d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 R q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 S bitline1 $end
$var wire 1 T bitline2 $end
$var wire 1 ! clk $end
$var wire 1 U d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 V q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 U d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 V q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 W bitline1 $end
$var wire 1 X bitline2 $end
$var wire 1 ! clk $end
$var wire 1 Y d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 Z q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 Y d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 Z q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 [ bitline1 $end
$var wire 1 \ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ] d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 ^ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ] d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 ^ q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 _ bitline1 $end
$var wire 1 ` bitline2 $end
$var wire 1 ! clk $end
$var wire 1 a d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 b q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 a d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 b q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 c bitline1 $end
$var wire 1 d bitline2 $end
$var wire 1 ! clk $end
$var wire 1 e d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 f q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 e d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 f q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 g bitline1 $end
$var wire 1 h bitline2 $end
$var wire 1 ! clk $end
$var wire 1 i d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 j q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 i d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 j q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 k bitline1 $end
$var wire 1 l bitline2 $end
$var wire 1 ! clk $end
$var wire 1 m d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 n q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 m d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 n q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 o bitline1 $end
$var wire 1 p bitline2 $end
$var wire 1 ! clk $end
$var wire 1 q d $end
$var wire 1 0 rden1 $end
$var wire 1 1 rden2 $end
$var wire 1 $ rst $end
$var wire 1 2 wren $end
$var wire 1 r q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 q d $end
$var wire 1 $ rst $end
$var wire 1 2 wen $end
$var reg 1 r q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r1 $end
$var wire 16 s bitline1 [15:0] $end
$var wire 16 t bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 u d [15:0] $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x write_reg $end
$scope module b0 $end
$var wire 1 y bitline1 $end
$var wire 1 z bitline2 $end
$var wire 1 ! clk $end
$var wire 1 { d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 | q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 { d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 | q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 } bitline1 $end
$var wire 1 ~ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 !" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 "" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 !" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 "" q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 #" bitline1 $end
$var wire 1 $" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 %" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 &" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 %" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 &" q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 '" bitline1 $end
$var wire 1 (" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 )" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 *" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 )" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 *" q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 +" bitline1 $end
$var wire 1 ," bitline2 $end
$var wire 1 ! clk $end
$var wire 1 -" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 ." q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 -" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 ." q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 /" bitline1 $end
$var wire 1 0" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 1" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 2" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 1" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 2" q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 3" bitline1 $end
$var wire 1 4" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 5" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 6" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 5" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 6" q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 7" bitline1 $end
$var wire 1 8" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 9" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 :" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 9" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 :" q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 ;" bitline1 $end
$var wire 1 <" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 =" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 >" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 =" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 >" q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 ?" bitline1 $end
$var wire 1 @" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 A" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 B" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 A" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 B" q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 C" bitline1 $end
$var wire 1 D" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 E" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 F" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 E" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 F" q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 G" bitline1 $end
$var wire 1 H" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 I" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 J" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 I" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 J" q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 K" bitline1 $end
$var wire 1 L" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 M" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 N" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 M" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 N" q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 O" bitline1 $end
$var wire 1 P" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 Q" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 R" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 Q" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 R" q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 S" bitline1 $end
$var wire 1 T" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 U" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 V" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 U" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 V" q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 W" bitline1 $end
$var wire 1 X" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 Y" d $end
$var wire 1 v rden1 $end
$var wire 1 w rden2 $end
$var wire 1 $ rst $end
$var wire 1 x wren $end
$var wire 1 Z" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 Y" d $end
$var wire 1 $ rst $end
$var wire 1 x wen $end
$var reg 1 Z" q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r10 $end
$var wire 16 [" bitline1 [15:0] $end
$var wire 16 \" bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 ]" d [15:0] $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" write_reg $end
$scope module b0 $end
$var wire 1 a" bitline1 $end
$var wire 1 b" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 c" d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 d" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 c" d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 d" q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 e" bitline1 $end
$var wire 1 f" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 g" d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 h" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 g" d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 h" q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 i" bitline1 $end
$var wire 1 j" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 k" d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 l" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 k" d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 l" q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 m" bitline1 $end
$var wire 1 n" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 o" d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 p" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 o" d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 p" q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 q" bitline1 $end
$var wire 1 r" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 s" d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 t" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 s" d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 t" q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 u" bitline1 $end
$var wire 1 v" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 w" d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 x" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 w" d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 x" q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 y" bitline1 $end
$var wire 1 z" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 {" d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 |" q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 {" d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 |" q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 }" bitline1 $end
$var wire 1 ~" bitline2 $end
$var wire 1 ! clk $end
$var wire 1 !# d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 "# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 !# d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 "# q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 ## bitline1 $end
$var wire 1 $# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 %# d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 &# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 %# d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 &# q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 '# bitline1 $end
$var wire 1 (# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 )# d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 *# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 )# d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 *# q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 +# bitline1 $end
$var wire 1 ,# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 -# d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 .# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 -# d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 .# q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 /# bitline1 $end
$var wire 1 0# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 1# d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 2# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 1# d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 2# q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 3# bitline1 $end
$var wire 1 4# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 5# d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 6# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 5# d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 6# q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 7# bitline1 $end
$var wire 1 8# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 9# d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 :# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 9# d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 :# q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 ;# bitline1 $end
$var wire 1 <# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 =# d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 ># q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 =# d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 ># q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 ?# bitline1 $end
$var wire 1 @# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 A# d $end
$var wire 1 ^" rden1 $end
$var wire 1 _" rden2 $end
$var wire 1 $ rst $end
$var wire 1 `" wren $end
$var wire 1 B# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 A# d $end
$var wire 1 $ rst $end
$var wire 1 `" wen $end
$var reg 1 B# q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r11 $end
$var wire 16 C# bitline1 [15:0] $end
$var wire 16 D# bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 E# d [15:0] $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# write_reg $end
$scope module b0 $end
$var wire 1 I# bitline1 $end
$var wire 1 J# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 K# d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 L# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 K# d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 L# q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 M# bitline1 $end
$var wire 1 N# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 O# d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 P# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 O# d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 P# q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 Q# bitline1 $end
$var wire 1 R# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 S# d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 T# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 S# d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 T# q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 U# bitline1 $end
$var wire 1 V# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 W# d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 X# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 W# d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 X# q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 Y# bitline1 $end
$var wire 1 Z# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 [# d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 \# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 [# d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 \# q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 ]# bitline1 $end
$var wire 1 ^# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 _# d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 `# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 _# d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 `# q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 a# bitline1 $end
$var wire 1 b# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 c# d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 d# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 c# d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 d# q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 e# bitline1 $end
$var wire 1 f# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 g# d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 h# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 g# d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 h# q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 i# bitline1 $end
$var wire 1 j# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 k# d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 l# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 k# d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 l# q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 m# bitline1 $end
$var wire 1 n# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 o# d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 p# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 o# d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 p# q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 q# bitline1 $end
$var wire 1 r# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 s# d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 t# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 s# d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 t# q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 u# bitline1 $end
$var wire 1 v# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 w# d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 x# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 w# d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 x# q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 y# bitline1 $end
$var wire 1 z# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 {# d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 |# q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 {# d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 |# q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 }# bitline1 $end
$var wire 1 ~# bitline2 $end
$var wire 1 ! clk $end
$var wire 1 !$ d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 "$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 !$ d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 "$ q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 #$ bitline1 $end
$var wire 1 $$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 %$ d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 &$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 %$ d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 &$ q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 '$ bitline1 $end
$var wire 1 ($ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 )$ d $end
$var wire 1 F# rden1 $end
$var wire 1 G# rden2 $end
$var wire 1 $ rst $end
$var wire 1 H# wren $end
$var wire 1 *$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 )$ d $end
$var wire 1 $ rst $end
$var wire 1 H# wen $end
$var reg 1 *$ q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r12 $end
$var wire 16 +$ bitline1 [15:0] $end
$var wire 16 ,$ bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 -$ d [15:0] $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ write_reg $end
$scope module b0 $end
$var wire 1 1$ bitline1 $end
$var wire 1 2$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 3$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 4$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 3$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 4$ q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 5$ bitline1 $end
$var wire 1 6$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 7$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 8$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 7$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 8$ q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 9$ bitline1 $end
$var wire 1 :$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ;$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 <$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ;$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 <$ q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 =$ bitline1 $end
$var wire 1 >$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ?$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 @$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ?$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 @$ q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 A$ bitline1 $end
$var wire 1 B$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 C$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 D$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 C$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 D$ q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 E$ bitline1 $end
$var wire 1 F$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 G$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 H$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 G$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 H$ q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 I$ bitline1 $end
$var wire 1 J$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 K$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 L$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 K$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 L$ q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 M$ bitline1 $end
$var wire 1 N$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 O$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 P$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 O$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 P$ q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 Q$ bitline1 $end
$var wire 1 R$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 S$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 T$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 S$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 T$ q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 U$ bitline1 $end
$var wire 1 V$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 W$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 X$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 W$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 X$ q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 Y$ bitline1 $end
$var wire 1 Z$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 [$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 \$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 [$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 \$ q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 ]$ bitline1 $end
$var wire 1 ^$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 _$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 `$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 _$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 `$ q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 a$ bitline1 $end
$var wire 1 b$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 c$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 d$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 c$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 d$ q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 e$ bitline1 $end
$var wire 1 f$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 g$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 h$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 g$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 h$ q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 i$ bitline1 $end
$var wire 1 j$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 k$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 l$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 k$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 l$ q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 m$ bitline1 $end
$var wire 1 n$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 o$ d $end
$var wire 1 .$ rden1 $end
$var wire 1 /$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 0$ wren $end
$var wire 1 p$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 o$ d $end
$var wire 1 $ rst $end
$var wire 1 0$ wen $end
$var reg 1 p$ q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r13 $end
$var wire 16 q$ bitline1 [15:0] $end
$var wire 16 r$ bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 s$ d [15:0] $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ write_reg $end
$scope module b0 $end
$var wire 1 w$ bitline1 $end
$var wire 1 x$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 y$ d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 z$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 y$ d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 z$ q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 {$ bitline1 $end
$var wire 1 |$ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 }$ d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 ~$ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 }$ d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 ~$ q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 !% bitline1 $end
$var wire 1 "% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 #% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 $% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 #% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 $% q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 %% bitline1 $end
$var wire 1 &% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 '% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 (% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 '% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 (% q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 )% bitline1 $end
$var wire 1 *% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 +% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 ,% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 +% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 ,% q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 -% bitline1 $end
$var wire 1 .% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 /% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 0% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 /% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 0% q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 1% bitline1 $end
$var wire 1 2% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 3% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 4% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 3% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 4% q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 5% bitline1 $end
$var wire 1 6% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 7% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 8% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 7% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 8% q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 9% bitline1 $end
$var wire 1 :% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ;% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 <% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ;% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 <% q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 =% bitline1 $end
$var wire 1 >% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ?% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 @% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ?% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 @% q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 A% bitline1 $end
$var wire 1 B% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 C% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 D% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 C% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 D% q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 E% bitline1 $end
$var wire 1 F% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 G% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 H% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 G% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 H% q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 I% bitline1 $end
$var wire 1 J% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 K% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 L% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 K% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 L% q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 M% bitline1 $end
$var wire 1 N% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 O% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 P% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 O% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 P% q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 Q% bitline1 $end
$var wire 1 R% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 S% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 T% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 S% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 T% q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 U% bitline1 $end
$var wire 1 V% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 W% d $end
$var wire 1 t$ rden1 $end
$var wire 1 u$ rden2 $end
$var wire 1 $ rst $end
$var wire 1 v$ wren $end
$var wire 1 X% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 W% d $end
$var wire 1 $ rst $end
$var wire 1 v$ wen $end
$var reg 1 X% q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r14 $end
$var wire 16 Y% bitline1 [15:0] $end
$var wire 16 Z% bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 [% d [15:0] $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% write_reg $end
$scope module b0 $end
$var wire 1 _% bitline1 $end
$var wire 1 `% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 a% d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 b% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 a% d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 b% q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 c% bitline1 $end
$var wire 1 d% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 e% d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 f% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 e% d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 f% q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 g% bitline1 $end
$var wire 1 h% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 i% d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 j% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 i% d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 j% q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 k% bitline1 $end
$var wire 1 l% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 m% d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 n% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 m% d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 n% q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 o% bitline1 $end
$var wire 1 p% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 q% d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 r% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 q% d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 r% q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 s% bitline1 $end
$var wire 1 t% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 u% d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 v% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 u% d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 v% q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 w% bitline1 $end
$var wire 1 x% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 y% d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 z% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 y% d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 z% q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 {% bitline1 $end
$var wire 1 |% bitline2 $end
$var wire 1 ! clk $end
$var wire 1 }% d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 ~% q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 }% d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 ~% q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 !& bitline1 $end
$var wire 1 "& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 #& d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 $& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 #& d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 $& q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 %& bitline1 $end
$var wire 1 && bitline2 $end
$var wire 1 ! clk $end
$var wire 1 '& d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 (& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 '& d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 (& q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 )& bitline1 $end
$var wire 1 *& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 +& d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 ,& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 +& d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 ,& q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 -& bitline1 $end
$var wire 1 .& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 /& d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 0& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 /& d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 0& q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 1& bitline1 $end
$var wire 1 2& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 3& d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 4& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 3& d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 4& q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 5& bitline1 $end
$var wire 1 6& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 7& d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 8& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 7& d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 8& q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 9& bitline1 $end
$var wire 1 :& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ;& d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 <& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ;& d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 <& q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 =& bitline1 $end
$var wire 1 >& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ?& d $end
$var wire 1 \% rden1 $end
$var wire 1 ]% rden2 $end
$var wire 1 $ rst $end
$var wire 1 ^% wren $end
$var wire 1 @& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ?& d $end
$var wire 1 $ rst $end
$var wire 1 ^% wen $end
$var reg 1 @& q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r15 $end
$var wire 16 A& bitline1 [15:0] $end
$var wire 16 B& bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 C& d [15:0] $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& write_reg $end
$scope module b0 $end
$var wire 1 G& bitline1 $end
$var wire 1 H& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 I& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 J& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 I& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 J& q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 K& bitline1 $end
$var wire 1 L& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 M& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 N& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 M& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 N& q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 O& bitline1 $end
$var wire 1 P& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 Q& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 R& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 Q& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 R& q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 S& bitline1 $end
$var wire 1 T& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 U& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 V& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 U& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 V& q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 W& bitline1 $end
$var wire 1 X& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 Y& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 Z& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 Y& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 Z& q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 [& bitline1 $end
$var wire 1 \& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ]& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 ^& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ]& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 ^& q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 _& bitline1 $end
$var wire 1 `& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 a& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 b& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 a& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 b& q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 c& bitline1 $end
$var wire 1 d& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 e& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 f& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 e& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 f& q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 g& bitline1 $end
$var wire 1 h& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 i& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 j& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 i& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 j& q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 k& bitline1 $end
$var wire 1 l& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 m& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 n& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 m& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 n& q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 o& bitline1 $end
$var wire 1 p& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 q& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 r& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 q& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 r& q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 s& bitline1 $end
$var wire 1 t& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 u& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 v& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 u& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 v& q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 w& bitline1 $end
$var wire 1 x& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 y& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 z& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 y& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 z& q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 {& bitline1 $end
$var wire 1 |& bitline2 $end
$var wire 1 ! clk $end
$var wire 1 }& d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 ~& q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 }& d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 ~& q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 !' bitline1 $end
$var wire 1 "' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 #' d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 $' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 #' d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 $' q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 %' bitline1 $end
$var wire 1 &' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 '' d $end
$var wire 1 D& rden1 $end
$var wire 1 E& rden2 $end
$var wire 1 $ rst $end
$var wire 1 F& wren $end
$var wire 1 (' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 '' d $end
$var wire 1 $ rst $end
$var wire 1 F& wen $end
$var reg 1 (' q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r2 $end
$var wire 16 )' bitline1 [15:0] $end
$var wire 16 *' bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 +' d [15:0] $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' write_reg $end
$scope module b0 $end
$var wire 1 /' bitline1 $end
$var wire 1 0' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 1' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 2' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 1' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 2' q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 3' bitline1 $end
$var wire 1 4' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 5' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 6' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 5' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 6' q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 7' bitline1 $end
$var wire 1 8' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 9' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 :' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 9' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 :' q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 ;' bitline1 $end
$var wire 1 <' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 =' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 >' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 =' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 >' q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 ?' bitline1 $end
$var wire 1 @' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 A' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 B' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 A' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 B' q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 C' bitline1 $end
$var wire 1 D' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 E' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 F' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 E' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 F' q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 G' bitline1 $end
$var wire 1 H' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 I' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 J' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 I' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 J' q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 K' bitline1 $end
$var wire 1 L' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 M' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 N' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 M' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 N' q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 O' bitline1 $end
$var wire 1 P' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 Q' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 R' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 Q' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 R' q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 S' bitline1 $end
$var wire 1 T' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 U' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 V' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 U' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 V' q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 W' bitline1 $end
$var wire 1 X' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 Y' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 Z' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 Y' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 Z' q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 [' bitline1 $end
$var wire 1 \' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ]' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 ^' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ]' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 ^' q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 _' bitline1 $end
$var wire 1 `' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 a' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 b' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 a' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 b' q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 c' bitline1 $end
$var wire 1 d' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 e' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 f' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 e' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 f' q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 g' bitline1 $end
$var wire 1 h' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 i' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 j' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 i' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 j' q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 k' bitline1 $end
$var wire 1 l' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 m' d $end
$var wire 1 ,' rden1 $end
$var wire 1 -' rden2 $end
$var wire 1 $ rst $end
$var wire 1 .' wren $end
$var wire 1 n' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 m' d $end
$var wire 1 $ rst $end
$var wire 1 .' wen $end
$var reg 1 n' q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r3 $end
$var wire 16 o' bitline1 [15:0] $end
$var wire 16 p' bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 q' d [15:0] $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' write_reg $end
$scope module b0 $end
$var wire 1 u' bitline1 $end
$var wire 1 v' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 w' d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 x' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 w' d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 x' q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 y' bitline1 $end
$var wire 1 z' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 {' d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 |' q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 {' d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 |' q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 }' bitline1 $end
$var wire 1 ~' bitline2 $end
$var wire 1 ! clk $end
$var wire 1 !( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 "( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 !( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 "( q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 #( bitline1 $end
$var wire 1 $( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 %( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 &( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 %( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 &( q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 '( bitline1 $end
$var wire 1 (( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 )( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 *( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 )( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 *( q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 +( bitline1 $end
$var wire 1 ,( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 -( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 .( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 -( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 .( q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 /( bitline1 $end
$var wire 1 0( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 1( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 2( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 1( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 2( q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 3( bitline1 $end
$var wire 1 4( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 5( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 6( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 5( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 6( q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 7( bitline1 $end
$var wire 1 8( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 9( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 :( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 9( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 :( q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 ;( bitline1 $end
$var wire 1 <( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 =( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 >( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 =( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 >( q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 ?( bitline1 $end
$var wire 1 @( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 A( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 B( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 A( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 B( q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 C( bitline1 $end
$var wire 1 D( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 E( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 F( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 E( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 F( q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 G( bitline1 $end
$var wire 1 H( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 I( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 J( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 I( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 J( q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 K( bitline1 $end
$var wire 1 L( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 M( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 N( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 M( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 N( q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 O( bitline1 $end
$var wire 1 P( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 Q( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 R( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 Q( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 R( q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 S( bitline1 $end
$var wire 1 T( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 U( d $end
$var wire 1 r' rden1 $end
$var wire 1 s' rden2 $end
$var wire 1 $ rst $end
$var wire 1 t' wren $end
$var wire 1 V( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 U( d $end
$var wire 1 $ rst $end
$var wire 1 t' wen $end
$var reg 1 V( q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r4 $end
$var wire 16 W( bitline1 [15:0] $end
$var wire 16 X( bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 Y( d [15:0] $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( write_reg $end
$scope module b0 $end
$var wire 1 ]( bitline1 $end
$var wire 1 ^( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 _( d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 `( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 _( d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 `( q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 a( bitline1 $end
$var wire 1 b( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 c( d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 d( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 c( d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 d( q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 e( bitline1 $end
$var wire 1 f( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 g( d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 h( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 g( d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 h( q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 i( bitline1 $end
$var wire 1 j( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 k( d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 l( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 k( d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 l( q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 m( bitline1 $end
$var wire 1 n( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 o( d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 p( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 o( d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 p( q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 q( bitline1 $end
$var wire 1 r( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 s( d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 t( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 s( d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 t( q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 u( bitline1 $end
$var wire 1 v( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 w( d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 x( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 w( d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 x( q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 y( bitline1 $end
$var wire 1 z( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 {( d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 |( q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 {( d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 |( q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 }( bitline1 $end
$var wire 1 ~( bitline2 $end
$var wire 1 ! clk $end
$var wire 1 !) d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 ") q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 !) d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 ") q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 #) bitline1 $end
$var wire 1 $) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 %) d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 &) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 %) d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 &) q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 ') bitline1 $end
$var wire 1 () bitline2 $end
$var wire 1 ! clk $end
$var wire 1 )) d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 *) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 )) d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 *) q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 +) bitline1 $end
$var wire 1 ,) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 -) d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 .) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 -) d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 .) q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 /) bitline1 $end
$var wire 1 0) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 1) d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 2) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 1) d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 2) q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 3) bitline1 $end
$var wire 1 4) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 5) d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 6) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 5) d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 6) q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 7) bitline1 $end
$var wire 1 8) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 9) d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 :) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 9) d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 :) q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 ;) bitline1 $end
$var wire 1 <) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 =) d $end
$var wire 1 Z( rden1 $end
$var wire 1 [( rden2 $end
$var wire 1 $ rst $end
$var wire 1 \( wren $end
$var wire 1 >) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 =) d $end
$var wire 1 $ rst $end
$var wire 1 \( wen $end
$var reg 1 >) q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r5 $end
$var wire 16 ?) bitline1 [15:0] $end
$var wire 16 @) bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 A) d [15:0] $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) write_reg $end
$scope module b0 $end
$var wire 1 E) bitline1 $end
$var wire 1 F) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 G) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 H) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 G) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 H) q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 I) bitline1 $end
$var wire 1 J) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 K) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 L) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 K) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 L) q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 M) bitline1 $end
$var wire 1 N) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 O) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 P) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 O) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 P) q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 Q) bitline1 $end
$var wire 1 R) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 S) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 T) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 S) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 T) q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 U) bitline1 $end
$var wire 1 V) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 W) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 X) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 W) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 X) q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 Y) bitline1 $end
$var wire 1 Z) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 [) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 \) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 [) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 \) q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 ]) bitline1 $end
$var wire 1 ^) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 _) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 `) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 _) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 `) q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 a) bitline1 $end
$var wire 1 b) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 c) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 d) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 c) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 d) q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 e) bitline1 $end
$var wire 1 f) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 g) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 h) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 g) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 h) q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 i) bitline1 $end
$var wire 1 j) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 k) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 l) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 k) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 l) q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 m) bitline1 $end
$var wire 1 n) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 o) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 p) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 o) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 p) q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 q) bitline1 $end
$var wire 1 r) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 s) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 t) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 s) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 t) q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 u) bitline1 $end
$var wire 1 v) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 w) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 x) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 w) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 x) q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 y) bitline1 $end
$var wire 1 z) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 {) d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 |) q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 {) d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 |) q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 }) bitline1 $end
$var wire 1 ~) bitline2 $end
$var wire 1 ! clk $end
$var wire 1 !* d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 "* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 !* d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 "* q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 #* bitline1 $end
$var wire 1 $* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 %* d $end
$var wire 1 B) rden1 $end
$var wire 1 C) rden2 $end
$var wire 1 $ rst $end
$var wire 1 D) wren $end
$var wire 1 &* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 %* d $end
$var wire 1 $ rst $end
$var wire 1 D) wen $end
$var reg 1 &* q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r6 $end
$var wire 16 '* bitline1 [15:0] $end
$var wire 16 (* bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 )* d [15:0] $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* write_reg $end
$scope module b0 $end
$var wire 1 -* bitline1 $end
$var wire 1 .* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 /* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 0* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 /* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 0* q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 1* bitline1 $end
$var wire 1 2* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 3* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 4* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 3* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 4* q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 5* bitline1 $end
$var wire 1 6* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 7* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 8* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 7* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 8* q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 9* bitline1 $end
$var wire 1 :* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ;* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 <* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ;* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 <* q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 =* bitline1 $end
$var wire 1 >* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ?* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 @* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ?* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 @* q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 A* bitline1 $end
$var wire 1 B* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 C* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 D* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 C* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 D* q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 E* bitline1 $end
$var wire 1 F* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 G* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 H* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 G* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 H* q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 I* bitline1 $end
$var wire 1 J* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 K* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 L* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 K* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 L* q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 M* bitline1 $end
$var wire 1 N* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 O* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 P* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 O* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 P* q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 Q* bitline1 $end
$var wire 1 R* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 S* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 T* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 S* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 T* q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 U* bitline1 $end
$var wire 1 V* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 W* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 X* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 W* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 X* q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 Y* bitline1 $end
$var wire 1 Z* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 [* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 \* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 [* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 \* q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 ]* bitline1 $end
$var wire 1 ^* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 _* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 `* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 _* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 `* q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 a* bitline1 $end
$var wire 1 b* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 c* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 d* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 c* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 d* q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 e* bitline1 $end
$var wire 1 f* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 g* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 h* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 g* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 h* q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 i* bitline1 $end
$var wire 1 j* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 k* d $end
$var wire 1 ** rden1 $end
$var wire 1 +* rden2 $end
$var wire 1 $ rst $end
$var wire 1 ,* wren $end
$var wire 1 l* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 k* d $end
$var wire 1 $ rst $end
$var wire 1 ,* wen $end
$var reg 1 l* q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r7 $end
$var wire 16 m* bitline1 [15:0] $end
$var wire 16 n* bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 o* d [15:0] $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* write_reg $end
$scope module b0 $end
$var wire 1 s* bitline1 $end
$var wire 1 t* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 u* d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 v* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 u* d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 v* q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 w* bitline1 $end
$var wire 1 x* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 y* d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 z* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 y* d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 z* q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 {* bitline1 $end
$var wire 1 |* bitline2 $end
$var wire 1 ! clk $end
$var wire 1 }* d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 ~* q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 }* d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 ~* q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 !+ bitline1 $end
$var wire 1 "+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 #+ d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 $+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 #+ d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 $+ q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 %+ bitline1 $end
$var wire 1 &+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 '+ d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 (+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 '+ d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 (+ q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 )+ bitline1 $end
$var wire 1 *+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ++ d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 ,+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ++ d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 ,+ q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 -+ bitline1 $end
$var wire 1 .+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 /+ d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 0+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 /+ d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 0+ q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 1+ bitline1 $end
$var wire 1 2+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 3+ d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 4+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 3+ d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 4+ q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 5+ bitline1 $end
$var wire 1 6+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 7+ d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 8+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 7+ d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 8+ q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 9+ bitline1 $end
$var wire 1 :+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ;+ d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 <+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ;+ d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 <+ q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 =+ bitline1 $end
$var wire 1 >+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ?+ d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 @+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ?+ d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 @+ q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 A+ bitline1 $end
$var wire 1 B+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 C+ d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 D+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 C+ d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 D+ q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 E+ bitline1 $end
$var wire 1 F+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 G+ d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 H+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 G+ d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 H+ q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 I+ bitline1 $end
$var wire 1 J+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 K+ d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 L+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 K+ d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 L+ q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 M+ bitline1 $end
$var wire 1 N+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 O+ d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 P+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 O+ d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 P+ q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 Q+ bitline1 $end
$var wire 1 R+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 S+ d $end
$var wire 1 p* rden1 $end
$var wire 1 q* rden2 $end
$var wire 1 $ rst $end
$var wire 1 r* wren $end
$var wire 1 T+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 S+ d $end
$var wire 1 $ rst $end
$var wire 1 r* wen $end
$var reg 1 T+ q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r8 $end
$var wire 16 U+ bitline1 [15:0] $end
$var wire 16 V+ bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 W+ d [15:0] $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ write_reg $end
$scope module b0 $end
$var wire 1 [+ bitline1 $end
$var wire 1 \+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ]+ d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 ^+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ]+ d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 ^+ q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 _+ bitline1 $end
$var wire 1 `+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 a+ d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 b+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 a+ d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 b+ q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 c+ bitline1 $end
$var wire 1 d+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 e+ d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 f+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 e+ d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 f+ q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 g+ bitline1 $end
$var wire 1 h+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 i+ d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 j+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 i+ d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 j+ q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 k+ bitline1 $end
$var wire 1 l+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 m+ d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 n+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 m+ d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 n+ q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 o+ bitline1 $end
$var wire 1 p+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 q+ d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 r+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 q+ d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 r+ q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 s+ bitline1 $end
$var wire 1 t+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 u+ d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 v+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 u+ d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 v+ q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 w+ bitline1 $end
$var wire 1 x+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 y+ d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 z+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 y+ d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 z+ q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 {+ bitline1 $end
$var wire 1 |+ bitline2 $end
$var wire 1 ! clk $end
$var wire 1 }+ d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 ~+ q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 }+ d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 ~+ q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 !, bitline1 $end
$var wire 1 ", bitline2 $end
$var wire 1 ! clk $end
$var wire 1 #, d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 $, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 #, d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 $, q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 %, bitline1 $end
$var wire 1 &, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ', d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 (, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ', d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 (, q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 ), bitline1 $end
$var wire 1 *, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 +, d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 ,, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 +, d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 ,, q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 -, bitline1 $end
$var wire 1 ., bitline2 $end
$var wire 1 ! clk $end
$var wire 1 /, d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 0, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 /, d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 0, q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 1, bitline1 $end
$var wire 1 2, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 3, d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 4, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 3, d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 4, q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 5, bitline1 $end
$var wire 1 6, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 7, d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 8, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 7, d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 8, q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 9, bitline1 $end
$var wire 1 :, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ;, d $end
$var wire 1 X+ rden1 $end
$var wire 1 Y+ rden2 $end
$var wire 1 $ rst $end
$var wire 1 Z+ wren $end
$var wire 1 <, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ;, d $end
$var wire 1 $ rst $end
$var wire 1 Z+ wen $end
$var reg 1 <, q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r9 $end
$var wire 16 =, bitline1 [15:0] $end
$var wire 16 >, bitline2 [15:0] $end
$var wire 1 ! clk $end
$var wire 16 ?, d [15:0] $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, write_reg $end
$scope module b0 $end
$var wire 1 C, bitline1 $end
$var wire 1 D, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 E, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 F, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 E, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 F, q $end
$upscope $end
$upscope $end
$scope module b1 $end
$var wire 1 G, bitline1 $end
$var wire 1 H, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 I, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 J, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 I, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 J, q $end
$upscope $end
$upscope $end
$scope module b10 $end
$var wire 1 K, bitline1 $end
$var wire 1 L, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 M, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 N, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 M, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 N, q $end
$upscope $end
$upscope $end
$scope module b11 $end
$var wire 1 O, bitline1 $end
$var wire 1 P, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 Q, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 R, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 Q, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 R, q $end
$upscope $end
$upscope $end
$scope module b12 $end
$var wire 1 S, bitline1 $end
$var wire 1 T, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 U, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 V, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 U, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 V, q $end
$upscope $end
$upscope $end
$scope module b13 $end
$var wire 1 W, bitline1 $end
$var wire 1 X, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 Y, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 Z, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 Y, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 Z, q $end
$upscope $end
$upscope $end
$scope module b14 $end
$var wire 1 [, bitline1 $end
$var wire 1 \, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 ], d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 ^, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 ], d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 ^, q $end
$upscope $end
$upscope $end
$scope module b15 $end
$var wire 1 _, bitline1 $end
$var wire 1 `, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 a, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 b, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 a, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 b, q $end
$upscope $end
$upscope $end
$scope module b2 $end
$var wire 1 c, bitline1 $end
$var wire 1 d, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 e, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 f, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 e, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 f, q $end
$upscope $end
$upscope $end
$scope module b3 $end
$var wire 1 g, bitline1 $end
$var wire 1 h, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 i, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 j, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 i, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 j, q $end
$upscope $end
$upscope $end
$scope module b4 $end
$var wire 1 k, bitline1 $end
$var wire 1 l, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 m, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 n, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 m, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 n, q $end
$upscope $end
$upscope $end
$scope module b5 $end
$var wire 1 o, bitline1 $end
$var wire 1 p, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 q, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 r, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 q, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 r, q $end
$upscope $end
$upscope $end
$scope module b6 $end
$var wire 1 s, bitline1 $end
$var wire 1 t, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 u, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 v, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 u, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 v, q $end
$upscope $end
$upscope $end
$scope module b7 $end
$var wire 1 w, bitline1 $end
$var wire 1 x, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 y, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 z, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 y, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 z, q $end
$upscope $end
$upscope $end
$scope module b8 $end
$var wire 1 {, bitline1 $end
$var wire 1 |, bitline2 $end
$var wire 1 ! clk $end
$var wire 1 }, d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 ~, q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 }, d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 ~, q $end
$upscope $end
$upscope $end
$scope module b9 $end
$var wire 1 !- bitline1 $end
$var wire 1 "- bitline2 $end
$var wire 1 ! clk $end
$var wire 1 #- d $end
$var wire 1 @, rden1 $end
$var wire 1 A, rden2 $end
$var wire 1 $ rst $end
$var wire 1 B, wren $end
$var wire 1 $- q $end
$scope module dff_cell $end
$var wire 1 ! clk $end
$var wire 1 #- d $end
$var wire 1 $ rst $end
$var wire 1 B, wen $end
$var reg 1 $- q $end
$upscope $end
$upscope $end
$upscope $end
$scope module rd0 $end
$var wire 4 %- reg_id [3:0] $end
$var wire 16 &- wordline [15:0] $end
$scope module d0 $end
$var wire 3 '- A [2:0] $end
$var wire 1 (- En $end
$var wire 8 )- D [7:0] $end
$upscope $end
$scope module d1 $end
$var wire 3 *- A [2:0] $end
$var wire 1 +- En $end
$var wire 8 ,- D [7:0] $end
$upscope $end
$upscope $end
$scope module rd1 $end
$var wire 4 -- reg_id [3:0] $end
$var wire 16 .- wordline [15:0] $end
$scope module d0 $end
$var wire 3 /- A [2:0] $end
$var wire 1 0- En $end
$var wire 8 1- D [7:0] $end
$upscope $end
$scope module d1 $end
$var wire 3 2- A [2:0] $end
$var wire 1 3- En $end
$var wire 8 4- D [7:0] $end
$upscope $end
$upscope $end
$scope module wd0 $end
$var wire 4 5- reg_id [3:0] $end
$var wire 1 ) write_reg $end
$var wire 16 6- wordline [15:0] $end
$var wire 16 7- temp [15:0] $end
$scope module d0 $end
$var wire 3 8- A [2:0] $end
$var wire 1 9- En $end
$var wire 8 :- D [7:0] $end
$upscope $end
$scope module d1 $end
$var wire 3 ;- A [2:0] $end
$var wire 1 <- En $end
$var wire 8 =- D [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 =-
0<-
b0 ;-
b1 :-
19-
b0 8-
b100000000 7-
b100000000 6-
b1000 5-
bx 4-
x3-
bx 2-
bx 1-
x0-
bx /-
bx .-
bx --
bx ,-
x+-
bx *-
bx )-
x(-
bx '-
bx &-
bx %-
x$-
0#-
x"-
x!-
x~,
0},
x|,
x{,
xz,
0y,
xx,
xw,
xv,
0u,
xt,
xs,
xr,
0q,
xp,
xo,
xn,
0m,
xl,
xk,
xj,
0i,
xh,
xg,
xf,
0e,
xd,
xc,
xb,
0a,
x`,
x_,
x^,
0],
x\,
x[,
xZ,
0Y,
xX,
xW,
xV,
0U,
xT,
xS,
xR,
1Q,
xP,
xO,
xN,
0M,
xL,
xK,
xJ,
0I,
xH,
xG,
xF,
0E,
xD,
xC,
0B,
xA,
x@,
b100000000000 ?,
bx >,
bx =,
x<,
0;,
x:,
x9,
x8,
07,
x6,
x5,
x4,
03,
x2,
x1,
x0,
0/,
x.,
x-,
x,,
0+,
x*,
x),
x(,
0',
x&,
x%,
x$,
0#,
x",
x!,
x~+
0}+
x|+
x{+
xz+
0y+
xx+
xw+
xv+
0u+
xt+
xs+
xr+
0q+
xp+
xo+
xn+
0m+
xl+
xk+
xj+
1i+
xh+
xg+
xf+
0e+
xd+
xc+
xb+
0a+
x`+
x_+
x^+
0]+
x\+
x[+
1Z+
xY+
xX+
b100000000000 W+
bx V+
bx U+
xT+
0S+
xR+
xQ+
xP+
0O+
xN+
xM+
xL+
0K+
xJ+
xI+
xH+
0G+
xF+
xE+
xD+
0C+
xB+
xA+
x@+
0?+
x>+
x=+
x<+
0;+
x:+
x9+
x8+
07+
x6+
x5+
x4+
03+
x2+
x1+
x0+
0/+
x.+
x-+
x,+
0++
x*+
x)+
x(+
0'+
x&+
x%+
x$+
1#+
x"+
x!+
x~*
0}*
x|*
x{*
xz*
0y*
xx*
xw*
xv*
0u*
xt*
xs*
0r*
xq*
xp*
b100000000000 o*
bx n*
bx m*
xl*
0k*
xj*
xi*
xh*
0g*
xf*
xe*
xd*
0c*
xb*
xa*
x`*
0_*
x^*
x]*
x\*
0[*
xZ*
xY*
xX*
0W*
xV*
xU*
xT*
0S*
xR*
xQ*
xP*
0O*
xN*
xM*
xL*
0K*
xJ*
xI*
xH*
0G*
xF*
xE*
xD*
0C*
xB*
xA*
x@*
0?*
x>*
x=*
x<*
1;*
x:*
x9*
x8*
07*
x6*
x5*
x4*
03*
x2*
x1*
x0*
0/*
x.*
x-*
0,*
x+*
x**
b100000000000 )*
bx (*
bx '*
x&*
0%*
x$*
x#*
x"*
0!*
x~)
x})
x|)
0{)
xz)
xy)
xx)
0w)
xv)
xu)
xt)
0s)
xr)
xq)
xp)
0o)
xn)
xm)
xl)
0k)
xj)
xi)
xh)
0g)
xf)
xe)
xd)
0c)
xb)
xa)
x`)
0_)
x^)
x])
x\)
0[)
xZ)
xY)
xX)
0W)
xV)
xU)
xT)
1S)
xR)
xQ)
xP)
0O)
xN)
xM)
xL)
0K)
xJ)
xI)
xH)
0G)
xF)
xE)
0D)
xC)
xB)
b100000000000 A)
bx @)
bx ?)
x>)
0=)
x<)
x;)
x:)
09)
x8)
x7)
x6)
05)
x4)
x3)
x2)
01)
x0)
x/)
x.)
0-)
x,)
x+)
x*)
0))
x()
x')
x&)
0%)
x$)
x#)
x")
0!)
x~(
x}(
x|(
0{(
xz(
xy(
xx(
0w(
xv(
xu(
xt(
0s(
xr(
xq(
xp(
0o(
xn(
xm(
xl(
1k(
xj(
xi(
xh(
0g(
xf(
xe(
xd(
0c(
xb(
xa(
x`(
0_(
x^(
x](
0\(
x[(
xZ(
b100000000000 Y(
bx X(
bx W(
xV(
0U(
xT(
xS(
xR(
0Q(
xP(
xO(
xN(
0M(
xL(
xK(
xJ(
0I(
xH(
xG(
xF(
0E(
xD(
xC(
xB(
0A(
x@(
x?(
x>(
0=(
x<(
x;(
x:(
09(
x8(
x7(
x6(
05(
x4(
x3(
x2(
01(
x0(
x/(
x.(
0-(
x,(
x+(
x*(
0)(
x((
x'(
x&(
1%(
x$(
x#(
x"(
0!(
x~'
x}'
x|'
0{'
xz'
xy'
xx'
0w'
xv'
xu'
0t'
xs'
xr'
b100000000000 q'
bx p'
bx o'
xn'
0m'
xl'
xk'
xj'
0i'
xh'
xg'
xf'
0e'
xd'
xc'
xb'
0a'
x`'
x_'
x^'
0]'
x\'
x['
xZ'
0Y'
xX'
xW'
xV'
0U'
xT'
xS'
xR'
0Q'
xP'
xO'
xN'
0M'
xL'
xK'
xJ'
0I'
xH'
xG'
xF'
0E'
xD'
xC'
xB'
0A'
x@'
x?'
x>'
1='
x<'
x;'
x:'
09'
x8'
x7'
x6'
05'
x4'
x3'
x2'
01'
x0'
x/'
0.'
x-'
x,'
b100000000000 +'
bx *'
bx )'
x('
0''
x&'
x%'
x$'
0#'
x"'
x!'
x~&
0}&
x|&
x{&
xz&
0y&
xx&
xw&
xv&
0u&
xt&
xs&
xr&
0q&
xp&
xo&
xn&
0m&
xl&
xk&
xj&
0i&
xh&
xg&
xf&
0e&
xd&
xc&
xb&
0a&
x`&
x_&
x^&
0]&
x\&
x[&
xZ&
0Y&
xX&
xW&
xV&
1U&
xT&
xS&
xR&
0Q&
xP&
xO&
xN&
0M&
xL&
xK&
xJ&
0I&
xH&
xG&
0F&
xE&
xD&
b100000000000 C&
bx B&
bx A&
x@&
0?&
x>&
x=&
x<&
0;&
x:&
x9&
x8&
07&
x6&
x5&
x4&
03&
x2&
x1&
x0&
0/&
x.&
x-&
x,&
0+&
x*&
x)&
x(&
0'&
x&&
x%&
x$&
0#&
x"&
x!&
x~%
0}%
x|%
x{%
xz%
0y%
xx%
xw%
xv%
0u%
xt%
xs%
xr%
0q%
xp%
xo%
xn%
1m%
xl%
xk%
xj%
0i%
xh%
xg%
xf%
0e%
xd%
xc%
xb%
0a%
x`%
x_%
0^%
x]%
x\%
b100000000000 [%
bx Z%
bx Y%
xX%
0W%
xV%
xU%
xT%
0S%
xR%
xQ%
xP%
0O%
xN%
xM%
xL%
0K%
xJ%
xI%
xH%
0G%
xF%
xE%
xD%
0C%
xB%
xA%
x@%
0?%
x>%
x=%
x<%
0;%
x:%
x9%
x8%
07%
x6%
x5%
x4%
03%
x2%
x1%
x0%
0/%
x.%
x-%
x,%
0+%
x*%
x)%
x(%
1'%
x&%
x%%
x$%
0#%
x"%
x!%
x~$
0}$
x|$
x{$
xz$
0y$
xx$
xw$
0v$
xu$
xt$
b100000000000 s$
bx r$
bx q$
xp$
0o$
xn$
xm$
xl$
0k$
xj$
xi$
xh$
0g$
xf$
xe$
xd$
0c$
xb$
xa$
x`$
0_$
x^$
x]$
x\$
0[$
xZ$
xY$
xX$
0W$
xV$
xU$
xT$
0S$
xR$
xQ$
xP$
0O$
xN$
xM$
xL$
0K$
xJ$
xI$
xH$
0G$
xF$
xE$
xD$
0C$
xB$
xA$
x@$
1?$
x>$
x=$
x<$
0;$
x:$
x9$
x8$
07$
x6$
x5$
x4$
03$
x2$
x1$
00$
x/$
x.$
b100000000000 -$
bx ,$
bx +$
x*$
0)$
x($
x'$
x&$
0%$
x$$
x#$
x"$
0!$
x~#
x}#
x|#
0{#
xz#
xy#
xx#
0w#
xv#
xu#
xt#
0s#
xr#
xq#
xp#
0o#
xn#
xm#
xl#
0k#
xj#
xi#
xh#
0g#
xf#
xe#
xd#
0c#
xb#
xa#
x`#
0_#
x^#
x]#
x\#
0[#
xZ#
xY#
xX#
1W#
xV#
xU#
xT#
0S#
xR#
xQ#
xP#
0O#
xN#
xM#
xL#
0K#
xJ#
xI#
0H#
xG#
xF#
b100000000000 E#
bx D#
bx C#
xB#
0A#
x@#
x?#
x>#
0=#
x<#
x;#
x:#
09#
x8#
x7#
x6#
05#
x4#
x3#
x2#
01#
x0#
x/#
x.#
0-#
x,#
x+#
x*#
0)#
x(#
x'#
x&#
0%#
x$#
x##
x"#
0!#
x~"
x}"
x|"
0{"
xz"
xy"
xx"
0w"
xv"
xu"
xt"
0s"
xr"
xq"
xp"
1o"
xn"
xm"
xl"
0k"
xj"
xi"
xh"
0g"
xf"
xe"
xd"
0c"
xb"
xa"
0`"
x_"
x^"
b100000000000 ]"
bx \"
bx ["
xZ"
0Y"
xX"
xW"
xV"
0U"
xT"
xS"
xR"
0Q"
xP"
xO"
xN"
0M"
xL"
xK"
xJ"
0I"
xH"
xG"
xF"
0E"
xD"
xC"
xB"
0A"
x@"
x?"
x>"
0="
x<"
x;"
x:"
09"
x8"
x7"
x6"
05"
x4"
x3"
x2"
01"
x0"
x/"
x."
0-"
x,"
x+"
x*"
1)"
x("
x'"
x&"
0%"
x$"
x#"
x""
0!"
x~
x}
x|
0{
xz
xy
0x
xw
xv
b100000000000 u
bx t
bx s
xr
0q
xp
xo
xn
0m
xl
xk
xj
0i
xh
xg
xf
0e
xd
xc
xb
0a
x`
x_
x^
0]
x\
x[
xZ
0Y
xX
xW
xV
0U
xT
xS
xR
0Q
xP
xO
xN
0M
xL
xK
xJ
0I
xH
xG
xF
0E
xD
xC
xB
1A
x@
x?
x>
0=
x<
x;
x:
09
x8
x7
x6
05
x4
x3
02
x1
x0
b100000000000 /
bx .
bx -
bx ,
bx +
b100000000 *
1)
bx (
bx '
bx &
bx %
1$
b1000 #
b100000000000 "
0!
$end
#15
x4
x8
xT
xX
x\
x`
xd
xh
xl
xp
x<
x@
xD
xH
xL
xP
xz
x~
x<"
x@"
xD"
xH"
xL"
xP"
xT"
xX"
x$"
x("
x,"
x0"
x4"
x8"
xb"
xf"
x$#
x(#
x,#
x0#
x4#
x8#
x<#
x@#
xj"
xn"
xr"
xv"
xz"
x~"
xJ#
xN#
xj#
xn#
xr#
xv#
xz#
x~#
x$$
x($
xR#
xV#
xZ#
x^#
xb#
xf#
x2$
x6$
xR$
xV$
xZ$
x^$
xb$
xf$
xj$
xn$
x:$
x>$
xB$
xF$
xJ$
xN$
xx$
x|$
x:%
x>%
xB%
xF%
xJ%
xN%
xR%
xV%
x"%
x&%
x*%
x.%
x2%
x6%
x`%
xd%
x"&
x&&
x*&
x.&
x2&
x6&
x:&
x>&
xh%
xl%
xp%
xt%
xx%
x|%
xH&
xL&
xh&
xl&
xp&
xt&
xx&
x|&
x"'
x&'
xP&
xT&
xX&
x\&
x`&
xd&
x0'
x4'
xP'
xT'
xX'
x\'
x`'
xd'
xh'
xl'
x8'
x<'
x@'
xD'
xH'
xL'
xv'
xz'
x8(
x<(
x@(
xD(
xH(
xL(
xP(
xT(
x~'
x$(
x((
x,(
x0(
x4(
x^(
xb(
x~(
x$)
x()
x,)
x0)
x4)
x8)
x<)
xf(
xj(
xn(
xr(
xv(
xz(
xF)
xJ)
xf)
xj)
xn)
xr)
xv)
xz)
x~)
x$*
xN)
xR)
xV)
xZ)
x^)
xb)
x.*
x2*
xN*
xR*
xV*
xZ*
x^*
xb*
xf*
xj*
x6*
x:*
x>*
xB*
xF*
xJ*
xt*
xx*
x6+
x:+
x>+
xB+
xF+
xJ+
xN+
xR+
x|*
x"+
x&+
x*+
x.+
x2+
x\+
x`+
x|+
x",
x&,
x*,
x.,
x2,
x6,
x:,
xd+
xh+
xl+
xp+
xt+
xx+
xD,
xH,
xd,
xh,
xl,
xp,
xt,
xx,
x|,
x"-
xL,
xP,
xT,
xX,
x\,
x`,
bx &
bx .
bx t
bx \"
bx D#
bx ,$
bx r$
bx Z%
bx B&
bx *'
bx p'
bx X(
bx @)
bx (*
bx n*
bx V+
bx >,
x3
x7
xS
xW
x[
x_
xc
xg
xk
xo
x;
x?
xC
xG
xK
xO
xy
x}
x;"
x?"
xC"
xG"
xK"
xO"
xS"
xW"
x#"
x'"
x+"
x/"
x3"
x7"
xa"
xe"
x##
x'#
x+#
x/#
x3#
x7#
x;#
x?#
xi"
xm"
xq"
xu"
xy"
x}"
xI#
xM#
xi#
xm#
xq#
xu#
xy#
x}#
x#$
x'$
xQ#
xU#
xY#
x]#
xa#
xe#
x1$
x5$
xQ$
xU$
xY$
x]$
xa$
xe$
xi$
xm$
x9$
x=$
xA$
xE$
xI$
xM$
xw$
x{$
x9%
x=%
xA%
xE%
xI%
xM%
xQ%
xU%
x!%
x%%
x)%
x-%
x1%
x5%
x_%
xc%
x!&
x%&
x)&
x-&
x1&
x5&
x9&
x=&
xg%
xk%
xo%
xs%
xw%
x{%
xG&
xK&
xg&
xk&
xo&
xs&
xw&
x{&
x!'
x%'
xO&
xS&
xW&
x[&
x_&
xc&
x/'
x3'
xO'
xS'
xW'
x['
x_'
xc'
xg'
xk'
x7'
x;'
x?'
xC'
xG'
xK'
xu'
xy'
x7(
x;(
x?(
xC(
xG(
xK(
xO(
xS(
x}'
x#(
x'(
x+(
x/(
x3(
x](
xa(
x}(
x#)
x')
x+)
x/)
x3)
x7)
x;)
xe(
xi(
xm(
xq(
xu(
xy(
xE)
xI)
xe)
xi)
xm)
xq)
xu)
xy)
x})
x#*
xM)
xQ)
xU)
xY)
x])
xa)
x-*
x1*
xM*
xQ*
xU*
xY*
x]*
xa*
xe*
xi*
x5*
x9*
x=*
xA*
xE*
xI*
xs*
xw*
x5+
x9+
x=+
xA+
xE+
xI+
xM+
xQ+
x{*
x!+
x%+
x)+
x-+
x1+
x[+
x_+
x{+
x!,
x%,
x),
x-,
x1,
x5,
x9,
xc+
xg+
xk+
xo+
xs+
xw+
xC,
xG,
xc,
xg,
xk,
xo,
xs,
xw,
x{,
x!-
xK,
xO,
xS,
xW,
x[,
x_,
bx %
bx -
bx s
bx ["
bx C#
bx +$
bx q$
bx Y%
bx A&
bx )'
bx o'
bx W(
bx ?)
bx '*
bx m*
bx U+
bx =,
06
0:
0V
0Z
0^
0b
0f
0j
0n
0r
0>
0B
0F
0J
0N
0R
0|
0""
0>"
0B"
0F"
0J"
0N"
0R"
0V"
0Z"
0&"
0*"
0."
02"
06"
0:"
02'
06'
0R'
0V'
0Z'
0^'
0b'
0f'
0j'
0n'
0:'
0>'
0B'
0F'
0J'
0N'
0x'
0|'
0:(
0>(
0B(
0F(
0J(
0N(
0R(
0V(
0"(
0&(
0*(
0.(
02(
06(
0`(
0d(
0")
0&)
0*)
0.)
02)
06)
0:)
0>)
0h(
0l(
0p(
0t(
0x(
0|(
0H)
0L)
0h)
0l)
0p)
0t)
0x)
0|)
0"*
0&*
0P)
0T)
0X)
0\)
0`)
0d)
00*
04*
0P*
0T*
0X*
0\*
0`*
0d*
0h*
0l*
08*
0<*
0@*
0D*
0H*
0L*
0v*
0z*
08+
0<+
0@+
0D+
0H+
0L+
0P+
0T+
0~*
0$+
0(+
0,+
00+
04+
0^+
0b+
0~+
0$,
0(,
0,,
00,
04,
08,
0<,
0f+
0j+
0n+
0r+
0v+
0z+
0F,
0J,
0f,
0j,
0n,
0r,
0v,
0z,
0~,
0$-
0N,
0R,
0V,
0Z,
0^,
0b,
0d"
0h"
0&#
0*#
0.#
02#
06#
0:#
0>#
0B#
0l"
0p"
0t"
0x"
0|"
0"#
0L#
0P#
0l#
0p#
0t#
0x#
0|#
0"$
0&$
0*$
0T#
0X#
0\#
0`#
0d#
0h#
04$
08$
0T$
0X$
0\$
0`$
0d$
0h$
0l$
0p$
0<$
0@$
0D$
0H$
0L$
0P$
0z$
0~$
0<%
0@%
0D%
0H%
0L%
0P%
0T%
0X%
0$%
0(%
0,%
00%
04%
08%
0b%
0f%
0$&
0(&
0,&
00&
04&
08&
0<&
0@&
0j%
0n%
0r%
0v%
0z%
0~%
0J&
0N&
0j&
0n&
0r&
0v&
0z&
0~&
0$'
0('
0R&
0V&
0Z&
0^&
0b&
0f&
1!
#30
0$
0!
#45
x@
x("
xn"
xV#
x>$
x&%
xl%
xT&
x<'
x$(
xj(
xR)
x:*
x"+
xh+
xP,
bx &
bx .
bx t
bx \"
bx D#
bx ,$
bx r$
bx Z%
bx B&
bx *'
bx p'
bx X(
bx @)
bx (*
bx n*
bx V+
bx >,
x?
x'"
xm"
xU#
x=$
x%%
xk%
xS&
x;'
x#(
xi(
xQ)
x9*
x!+
xg+
xO,
bx %
bx -
bx s
bx ["
bx C#
bx +$
bx q$
bx Y%
bx A&
bx )'
bx o'
bx W(
bx ?)
bx '*
bx m*
bx U+
bx =,
1j+
1!
#60
0!
#75
1!
#90
0!
#105
1!
#120
0!
#135
1!
#150
0!
#165
03
07
0S
0W
0[
0_
0c
0g
0k
0o
0;
0C
0G
0K
0O
0y
0}
0;"
0?"
0C"
0G"
0K"
0O"
0S"
0W"
0#"
0+"
0/"
03"
07"
0a"
0e"
0##
0'#
0+#
0/#
03#
07#
0;#
0?#
0i"
0q"
0u"
0y"
0}"
0I#
0M#
0i#
0m#
0q#
0u#
0y#
0}#
0#$
0'$
0Q#
0Y#
0]#
0a#
0e#
01$
05$
0Q$
0U$
0Y$
0]$
0a$
0e$
0i$
0m$
09$
0A$
0E$
0I$
0M$
0w$
0{$
09%
0=%
0A%
0E%
0I%
0M%
0Q%
0U%
0!%
0)%
0-%
01%
05%
0_%
0c%
0!&
0%&
0)&
0-&
01&
05&
09&
0=&
0g%
0o%
0s%
0w%
0{%
0G&
0K&
0g&
0k&
0o&
0s&
0w&
0{&
0!'
0%'
0O&
0W&
0[&
0_&
0c&
0/'
03'
0O'
0S'
0W'
0['
0_'
0c'
0g'
0k'
07'
0?'
0C'
0G'
0K'
0u'
0y'
07(
0;(
0?(
0C(
0G(
0K(
0O(
0S(
0}'
0'(
0+(
0/(
03(
0](
0a(
0}(
0#)
0')
0+)
0/)
03)
07)
0;)
0e(
0m(
0q(
0u(
0y(
0E)
0I)
0e)
0i)
0m)
0q)
0u)
0y)
0})
0#*
0M)
0U)
0Y)
0])
0a)
0-*
01*
0M*
0Q*
0U*
0Y*
0]*
0a*
0e*
0i*
05*
0=*
0A*
0E*
0I*
0s*
0w*
05+
09+
0=+
0A+
0E+
0I+
0M+
0Q+
0{*
0%+
0)+
0-+
01+
0[+
0_+
0{+
0!,
0%,
0),
0-,
01,
05,
09,
0c+
0k+
0o+
0s+
0w+
0C,
0G,
0c,
0g,
0k,
0o,
0s,
0w,
0{,
0!-
0K,
0S,
0W,
0[,
0_,
1X+
1?
1'"
1m"
1U#
1=$
1%%
1k%
1S&
1;'
1#(
1i(
1Q)
19*
1!+
1g+
1O,
b100000000000 %
b100000000000 -
b100000000000 s
b100000000000 ["
b100000000000 C#
b100000000000 +$
b100000000000 q$
b100000000000 Y%
b100000000000 A&
b100000000000 )'
b100000000000 o'
b100000000000 W(
b100000000000 ?)
b100000000000 '*
b100000000000 m*
b100000000000 U+
b100000000000 =,
0@,
0^"
0F#
0.$
0t$
0\%
0D&
00
0v
0,'
0r'
0Z(
0B)
0**
0p*
b1 )-
b100000000 ,
b100000000 &-
b0 ,-
0+-
0Z+
b0 '-
1(-
b0 *-
b0 *
b0 6-
b1000 '
b1000 %-
0)
1!
#180
0!
#195
1!
#210
0!
#225
1!
#240
0!
#255
1!
#270
0!
#285
1!
#300
0!
#315
1!
